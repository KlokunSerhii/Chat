{"version":3,"file":"static/js/23.46fb8497.chunk.js","mappings":"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","sources":["options/socket.js","webpack://chat-front/./src/components/Chat/Chat.module.css?f66a","webpack://chat-front/./src/components/ChatForm/ChatForm.module.css?1cba","components/ChatForm/ChatForm.jsx","webpack://chat-front/./src/components/RoomList/RoomList.module.css?5a32","components/RoomList/RoomList.jsx","redux/message/selectors.js","components/Chat/MessageListDB/MessageListDB.jsx","hooks/message.js","components/Chat/MessageListSocket/MessageListSocket.jsx","components/Chat/Chat.jsx","page/ChatPage/ChatPage.jsx"],"sourcesContent":["import io from 'socket.io-client';\r\n\r\nexport const socket = io.connect(\r\n  'https://chat-back-end-6mf9.onrender.com'\r\n);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ChatBox\":\"Chat_ChatBox__wWy5T\",\"chat\":\"Chat_chat__Gsxzx\",\"container\":\"Chat_container__yskll\",\"containerChat\":\"Chat_containerChat__Pjv8e\",\"containerRoom\":\"Chat_containerRoom__02Onl\",\"user\":\"Chat_user__sRbH4\",\"you\":\"Chat_you__phQvY\",\"nameUser\":\"Chat_nameUser__nFTjx\",\"nameYou\":\"Chat_nameYou__QxwPX\",\"containerUser\":\"Chat_containerUser__iGmzi\",\"containerYou\":\"Chat_containerYou__Ag1bP\",\"messageContainerYou\":\"Chat_messageContainerYou__47H4W\",\"messageContainerUser\":\"Chat_messageContainerUser__lGNQ7\",\"avatar\":\"Chat_avatar__Ts9E4\",\"avatarRoom\":\"Chat_avatarRoom__ubMsI\",\"roomList\":\"Chat_roomList__QIECw\",\"infoMessage\":\"Chat_infoMessage__pu6Ts\",\"infoMessageUser\":\"Chat_infoMessageUser__YZ2m0\",\"time\":\"Chat_time__V3Q0l\",\"room\":\"Chat_room__q3yl3\",\"users\":\"Chat_users__lyQF6\",\"roomOnline\":\"Chat_roomOnline__l6-J0\",\"roomItem\":\"Chat_roomItem__kQaRH\",\"containerRoomMobile\":\"Chat_containerRoomMobile__6eDC8\",\"roomMobile\":\"Chat_roomMobile__BgXrR\",\"usersMobile\":\"Chat_usersMobile__9EnJj\",\"roomOnlineMobile\":\"Chat_roomOnlineMobile__INRki\",\"buttonClose\":\"Chat_buttonClose__9JURx\",\"nameMobile\":\"Chat_nameMobile__E94lF\",\"roomItemMobile\":\"Chat_roomItemMobile__3uVHr\",\"buttonOpen\":\"Chat_buttonOpen__Q3xTb\",\"iconClose\":\"Chat_iconClose__jyyTD\",\"iconOpen\":\"Chat_iconOpen__WJ3Sh\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ChatForm_container__etVuE\",\"input\":\"ChatForm_input__4TYEQ\",\"iconContainer\":\"ChatForm_iconContainer__R2pH9\",\"icon\":\"ChatForm_icon__CKdyi\",\"iconSend\":\"ChatForm_iconSend__0zQ13\",\"button\":\"ChatForm_button__b3fJc\",\"containerEmoji\":\"ChatForm_containerEmoji__QP4Ky\"};","import React, { useState } from 'react';\nimport EmojiPicker from 'emoji-picker-react';\nimport smail from '../../img/smail.png';\nimport styles from './ChatForm.module.css';\nimport { AiOutlineSend } from 'react-icons/ai';\n\nfunction ChatForm({ onSubmit }) {\n  const [message, setMessage] = useState('');\n  const [isOpen, setOpen] = useState(false);\n\n  const handleChange = ({ target }) => {\n    const { value } = target;\n    setMessage(value);\n  };\n\n  const onEmojiClick = ({ emoji }) => {\n    setMessage(prevMessage => prevMessage + emoji);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ message });\n\n    setMessage('');\n    setOpen(false);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.iconContainer}>\n        <img\n          className={styles.icon}\n          src={smail}\n          alt=\"\"\n          onClick={() => setOpen(!isOpen)}\n        />\n      </div>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <input\n          className={styles.input}\n          value={message}\n          name=\"message\"\n          onChange={handleChange}\n          placeholder=\"write a message\"\n        />\n\n        <button className={styles.button} type=\"submit\">\n          <AiOutlineSend className={styles.iconSend} />\n        </button>\n        {isOpen && (\n          <div className={styles.containerEmoji}>\n            <EmojiPicker\n              onEmojiClick={onEmojiClick}\n              height={400}\n              width=\"100%\"\n              autoFocusSearch={false}\n            />\n          </div>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default ChatForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"containerRoomMobile\":\"RoomList_containerRoomMobile__qRbfk\",\"containerRoom\":\"RoomList_containerRoom__1EPWE\",\"roomOnline\":\"RoomList_roomOnline__yoi6g\",\"room\":\"RoomList_room__Q70Pp\",\"users\":\"RoomList_users__1y9q6\",\"roomList\":\"RoomList_roomList__plSl3\",\"roomItemMobile\":\"RoomList_roomItemMobile__QfLgY\",\"roomItem\":\"RoomList_roomItem__UXKio\",\"avatarRoom\":\"RoomList_avatarRoom__K5kf4\",\"roomOnlineMobile\":\"RoomList_roomOnlineMobile__K+XzZ\",\"roomMobile\":\"RoomList_roomMobile__VKKeZ\",\"usersMobile\":\"RoomList_usersMobile__-vqZJ\",\"nameMobile\":\"RoomList_nameMobile__IJEeZ\",\"btnAdd\":\"RoomList_btnAdd__QSz39\",\"btnDelete\":\"RoomList_btnDelete__00n+x\",\"nameUser\":\"RoomList_nameUser__+YZEX\",\"userContainer\":\"RoomList_userContainer__zWQ9x\",\"btnContainer\":\"RoomList_btnContainer__nRA0q\"};","import React, { useEffect, useState } from 'react';\r\nimport styles from './RoomList.module.css';\r\n\r\nimport { socket } from '../../options/socket';\r\nimport { AiOutlineUsergroupAdd } from 'react-icons/ai';\r\nimport { useAuth } from 'hooks/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addFriend } from 'redux/friend/operations';\r\n\r\nfunction RoomList({ isOpen, params }) {\r\n  const [users, setUsers] = useState(0);\r\n  const [userList, setUserList] = useState('');\r\n  const { user } = useAuth();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    socket.on('room', ({ data: { users } }) => {\r\n      setUsers(users.length);\r\n      setUserList(users);\r\n    });\r\n  }, []);\r\n\r\n  const handlerAddFriends = (name, avatar) => {\r\n    const { _id } = user;\r\n    dispatch(addFriend({ name, avatarURL: avatar, _id }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.containerRoom}>\r\n        <div className={styles.roomOnline}>\r\n          <p className={styles.room}>Room: {params.room}</p>\r\n          <p className={styles.users}>Users online: {users}</p>\r\n        </div>\r\n        <ul className={styles.roomList}>\r\n          {userList &&\r\n            userList.map(({ name, avatar }, i) => (\r\n              <li key={i} className={styles.roomItem}>\r\n                <div className={styles.userContainer}>\r\n                  <img\r\n                    className={styles.avatarRoom}\r\n                    src={avatar}\r\n                    alt=\"avatar\"\r\n                  />\r\n                  <p className={styles.nameUser}>{name}</p>\r\n                </div>\r\n                <div className={styles.btnContainer}>\r\n                  {user.name !== name && (\r\n                    <button\r\n                      className={styles.btnAdd}\r\n                      onClick={handlerAddFriends(name, avatar)}\r\n                    >\r\n                      <AiOutlineUsergroupAdd />\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n      {isOpen && (\r\n        <div className={styles.containerRoomMobile}>\r\n          <div className={styles.roomOnlineMobile}>\r\n            <p className={styles.roomMobile}>Room: {params.room}</p>\r\n            <p className={styles.usersMobile}>\r\n              Users online: {users}\r\n            </p>\r\n          </div>\r\n          <ul className={styles.roomList}>\r\n            {userList &&\r\n              userList.map(({ name, avatar }, i) => (\r\n                <li key={i} className={styles.roomItemMobile}>\r\n                  <div className={styles.userContainer}>\r\n                    <img\r\n                      className={styles.avatarRoom}\r\n                      src={avatar}\r\n                      alt=\"avatar\"\r\n                    />\r\n                    <p className={styles.nameMobile}>{name}</p>\r\n                  </div>\r\n\r\n                  <div className={styles.btnContainer}>\r\n                    {user.name !== name && (\r\n                      <button\r\n                        className={styles.btnAdd}\r\n                        onClick={handlerAddFriends(name, avatar)}\r\n                      >\r\n                        <AiOutlineUsergroupAdd />\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RoomList;\r\n","export const select = state =>state.message.items;\r\n","import React from 'react';\r\nimport styles from '../Chat.module.css';\r\nimport { useMessage } from '../../../hooks/message';\r\nimport imgDefault from '../../../img/bot.jpg';\r\n\r\nfunction MessageListDB({ params }) {\r\n  const { items } = useMessage();\r\n\r\n  return (\r\n    <>\r\n      {items.map(({ user, message }, i) => {\r\n        const avatar = user.avatar\r\n          ? user.avatar\r\n          : imgDefault;\r\n        const you = user.name === params.name;\r\n        return you ? (\r\n          <div key={i} className={styles.containerYou}>\r\n            <img\r\n              src={avatar}\r\n              alt=\"avatar\"\r\n              className={styles.avatar}\r\n            />\r\n            <div className={styles.messageContainerYou}>\r\n              <p className={styles.you}>{message}</p>\r\n              <div className={styles.infoMessage}>\r\n                <p className={styles.time}>{}</p>\r\n                <p className={styles.nameYou}>\r\n                  {user.name}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div key={i} className={styles.containerUser}>\r\n            <img\r\n              src={avatar}\r\n              alt=\"avatar\"\r\n              className={styles.avatar}\r\n            />\r\n            <div className={styles.messageContainerUser}>\r\n              <p className={styles.user}>{message}</p>\r\n              <div className={styles.infoMessageUser}>\r\n                <p className={styles.time}>{}</p>\r\n                <p className={styles.nameUser}>\r\n                  {user.name}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MessageListDB;\r\n","import { useSelector } from 'react-redux';\r\nimport { select } from '../redux/message/selectors'\r\n\r\n\r\n\r\nexport const useMessage = () => {\r\n    return {\r\n      items: useSelector(select),\r\n    };\r\n  };\r\n  ","import React from 'react';\nimport styles from '../Chat.module.css';\nimport imgDefault from '../../../img/bot.jpg';\n\nfunction MessageListSocket({ state, params }) {\n  return (\n    <>\n      {state.map(({ user, message }, i) => {\n        const avatar = user.avatar\n          ? user.avatar\n          : imgDefault;\n        const you = user.name === params.name;\n        return you ? (\n          <div key={i} className={styles.containerYou}>\n            <img\n              src={avatar}\n              alt=\"avatar\"\n              className={styles.avatar}\n            />\n            <div className={styles.messageContainerYou}>\n              <p className={styles.you}>{message}</p>\n              <div className={styles.infoMessage}>\n                <p className={styles.time}>{}</p>\n                <p className={styles.nameYou}>\n                  {user.name}\n                </p>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div key={i} className={styles.containerUser}>\n            <img\n              src={avatar}\n              alt=\"avatar\"\n              className={styles.avatar}\n            />\n            <div className={styles.messageContainerUser}>\n              <p className={styles.user}>{message}</p>\n              <div className={styles.infoMessageUser}>\n                <p className={styles.time}>{}</p>\n                <p className={styles.nameUser}>\n                  {user.name}\n                </p>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\nexport default MessageListSocket;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styles from './Chat.module.css';\nimport ChatForm from 'components/ChatForm/ChatForm';\nimport imgDefault from '../../img/bot.jpg';\nimport { TiUserOutline } from 'react-icons/ti';\nimport { socket } from '../../options/socket';\nimport {\n  getMessages,\n  addMessageDB,\n} from 'redux/message/operations';\nimport { useDispatch } from 'react-redux';\nimport RoomList from 'components/RoomList/RoomList';\nimport MessageListDB from 'components/Chat/MessageListDB/MessageListDB';\nimport MessageListSocket from 'components/Chat/MessageListSocket/MessageListSocket';\n\nconst Chat = () => {\n  const messagesEndRef = useRef(null);\n  const [isOpen, setOpen] = useState(false);\n  const [state, setState] = useState([]);\n  const { search } = useLocation();\n  const [params, setParams] = useState({\n    room: '',\n    user: '',\n    avatar: imgDefault,\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (params.room) dispatch(getMessages(params.room));\n  }, [dispatch, params.room]);\n\n  useEffect(() => {\n    const searchParams = Object.fromEntries(\n      new URLSearchParams(search)\n    );\n    setParams(searchParams);\n    socket.emit('join', searchParams);\n  }, [search]);\n\n  useEffect(() => {\n    socket.on('message', ({ data }) => {\n      setState(prevState => [...prevState, data]);\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on('message', ({ data }) => {\n      dispatch(addMessageDB({ params, data }));\n    });\n  }, [dispatch, params]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [state]);\n\n  const addMessage = ({ message }) => {\n    if (!message) return;\n    socket.emit('send', { message, params });\n  };\n\n  const toggleOpen = () => {\n    setOpen(!isOpen);\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div className={styles.chat}>\n      <button\n        type=\"button\"\n        className={styles.buttonOpen}\n        onClick={toggleOpen}\n      >\n        <TiUserOutline className={styles.iconOpen} />\n        Online\n      </button>\n      <div className={styles.ChatBox}>\n        <div className={styles.container}>\n          <div className={styles.containerChat}>\n            <MessageListDB params={params} />\n            <MessageListSocket\n              state={state}\n              params={params}\n            />\n            <div ref={messagesEndRef} />\n          </div>\n        </div>\n        <RoomList isOpen={isOpen} params={params} />\n      </div>\n\n      <ChatForm onSubmit={addMessage} />\n    </div>\n  );\n};\n\nexport default Chat;\n","import Chat from '../../components/Chat';\r\n\r\nfunction ChatPage() {\r\n  return (\r\n    <div>\r\n      <Chat />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatPage;\r\n"],"names":["socket","io","_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","isOpen","setOpen","_jsxs","className","styles","container","children","_jsx","iconContainer","icon","src","alt","onClick","form","e","preventDefault","input","value","name","onChange","_ref2","target","placeholder","button","type","AiOutlineSend","iconSend","containerEmoji","EmojiPicker","onEmojiClick","_ref3","emoji","prevMessage","height","width","autoFocusSearch","params","users","setUsers","userList","setUserList","user","useAuth","dispatch","useDispatch","useEffect","on","data","length","handlerAddFriends","avatar","_id","addFriend","avatarURL","_Fragment","room","map","i","AiOutlineUsergroupAdd","_ref4","select","state","items","useSelector","imgDefault","messagesEndRef","useRef","setState","search","useLocation","_useState5","_useState6","setParams","getMessages","searchParams","Object","fromEntries","URLSearchParams","emit","prevState","concat","_toConsumableArray","addMessageDB","scrollToBottom","current","scrollIntoView","behavior","TiUserOutline","MessageListDB","MessageListSocket","ref","RoomList","ChatForm","Chat"],"sourceRoot":""}